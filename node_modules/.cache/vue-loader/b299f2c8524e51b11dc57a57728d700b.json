{"remainingRequest":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\vue-world-map\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\vue-world-map\\src\\App.vue","mtime":1515345505000},{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\vuetify-loader\\lib\\loader.js","mtime":1564062719000},{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\Danh\\Documents\\apps\\vuetify-MD-PRO\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["//\n//\n//\n//\n//\n//\n\nimport chroma from 'chroma-js';\nimport Map from './Map';\nimport {\n  getDynamicMapCss,\n  getBaseCss,\n  getCombinedCssString,\n} from './dynamic-map-css';\n\n\nexport default {\n  components: { Map },\n  watch: {\n    countryData() {\n      this.renderMapCSS();\n    },\n  },\n  props: {\n    lowColor: {\n      type: String,\n      default: '#fde2e2',\n    },\n    highColor: {\n      type: String,\n      default: '#d83737',\n    },\n    countryData: {\n      type: Object,\n      required: true,\n    },\n    defaultCountryFillColor: {\n      type: String,\n      default: '#dadada',\n    },\n    countryStrokeColor: {\n      type: String,\n      default: 'black',\n    },\n  },\n  data() {\n    return {\n      node: document.createElement('style'),\n      chromaScale: chroma.scale([this.$props.lowColor, this.$props.highColor]),\n    };\n  },\n  methods: {\n    renderMapCSS() {\n      const baseCss = getBaseCss(this.$props);\n      const dynamicMapCss = getDynamicMapCss(this.$props.countryData, this.chromaScale);\n      this.$data.node.innerHTML = getCombinedCssString(baseCss, dynamicMapCss);\n    },\n  },\n  mounted() {\n    document.body.appendChild(this.$data.node);\n    this.renderMapCSS();\n  },\n};\n",{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"node_modules/vue-world-map/src","sourcesContent":["<template>\n<div class=\"vue-world-map\">\n  <Map />\n</div>\n</template>\n\n<script>\nimport chroma from 'chroma-js';\nimport Map from './Map';\nimport {\n  getDynamicMapCss,\n  getBaseCss,\n  getCombinedCssString,\n} from './dynamic-map-css';\n\n\nexport default {\n  components: { Map },\n  watch: {\n    countryData() {\n      this.renderMapCSS();\n    },\n  },\n  props: {\n    lowColor: {\n      type: String,\n      default: '#fde2e2',\n    },\n    highColor: {\n      type: String,\n      default: '#d83737',\n    },\n    countryData: {\n      type: Object,\n      required: true,\n    },\n    defaultCountryFillColor: {\n      type: String,\n      default: '#dadada',\n    },\n    countryStrokeColor: {\n      type: String,\n      default: 'black',\n    },\n  },\n  data() {\n    return {\n      node: document.createElement('style'),\n      chromaScale: chroma.scale([this.$props.lowColor, this.$props.highColor]),\n    };\n  },\n  methods: {\n    renderMapCSS() {\n      const baseCss = getBaseCss(this.$props);\n      const dynamicMapCss = getDynamicMapCss(this.$props.countryData, this.chromaScale);\n      this.$data.node.innerHTML = getCombinedCssString(baseCss, dynamicMapCss);\n    },\n  },\n  mounted() {\n    document.body.appendChild(this.$data.node);\n    this.renderMapCSS();\n  },\n};\n</script>\n\n<style>\n.vue-world-map {\n  height: 100%;\n}\n\n#map-svg {\n  height: 100%;\n}\n</style>\n"]}]}